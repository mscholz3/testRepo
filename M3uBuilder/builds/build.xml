<?xml version="1.0" encoding="UTF-8"?>
<!-- Sets the project name to M3uBuilder and the basedir to one above -->
<project name="M3uBuilder"
	default="main"
	xmlns:flyway="antlib:com.googlecode.flyway.ant"
	basedir="..">

	<!-- Sets variables which can later be used. -->
	<property name="src.dir" location="src" />
	<property name="test.dir" location="test" />
	<property name="build.dir" location="bin" />
	<property name="dist.dir" location="distribution" />
	<property name="libs.dir" location="librarys" />
	<property name="testout.dir" location="testresults" />
	<property name="docs.dir" location="javadoc" />

	<!-- Sets classpath dependencies -->
 	<path id="classpath">
		<fileset dir="${libs.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- Deletes the existing build, docs and dist directory-->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${docs.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${testout.dir}" />
	</target>

	<!-- Creates the  build, docs and dist directory-->
	<target name="makedir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${testout.dir}" />
	</target>

	<!-- Compiles the java code -->
	<target name="compile" depends="clean, makedir">
		<javac srcdir="${src.dir}" destdir="${build.dir}"
			failonerror="true" includeantruntime="false">

			<classpath refid="classpath" />
		</javac>

		<javac srcdir="${test.dir}" destdir="${build.dir}"
			failonerror="true" includeantruntime="false">

			<classpath refid="classpath" />
		</javac>
	</target>

	<!-- Integrate Flyway -->
	<target name="migrate-db">
		<taskdef uri="antlib:com.googlecode.flyway.ant"
			resource="com/googlecode/flyway/ant/antlib.xml">
			<classpath>
				<pathelement location="${libs.dir}/flyway-core-2.1.1.jar"/>
				<pathelement location="${libs.dir}/flyway-ant-2.1.1.jar"/>
			</classpath>
		</taskdef>

		<path id="flyway.classpath">
			<fileset dir="${libs.dir}" includes="mysql-connector-java-5.1.24-bin.jar"/>
		</path>
		<property name="flyway.locations" value="filesystem:../database"/>

		<flyway:migrate url="jdbc:mysql://localhost:3306/filesystem" user="flyway"/>
	</target>

	<!-- Execute JUnit Test -->
	<target name="junit" depends="clean, makedir, compile, migrate-db">
		<junit printsummary="yes" haltonfailure="yes" logfailedtests="on">
			<classpath>
				<pathelement location="${build.dir}" />
				<pathelement location="${libs.dir}/junit-4.11.jar" />
				<fileset dir="${libs.dir}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>

			<batchtest haltonfailure="yes" todir="${testout.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
			<formatter type="plain" />
			<formatter type="xml" />

			<!--
			<test name="testmain.M3uBuilderTest" haltonfailure="yes"
				todir="${testout.dir}" outfile="result">

				<formatter type="plain" />
				<formatter type="xml" />
			</test>

			<test name="testmain.JSonFileIOTest" haltonfailure="yes"
				todir="${testout.dir}" outfile="result" />
			<test name="testmain.DirectoryReaderTest" haltonfailure="yes"
				todir="${testout.dir}" outfile="result" />
			<test name="testmain.M3uBuilderTest" haltonfailure="yes"
				todir="${testout.dir}" outfile="result" />
			-->
		</junit>
	</target>

	<!-- Creates Javadoc -->
	<target name="docs" depends="compile">
		<javadoc packagenames="src" sourcepath="${src.dir}"
			destdir="${docs.dir}">

			<classpath refid="classpath" />
			<!-- Define which files / directory should get included -->
			<fileset dir="${src.dir}">
				<include name="**" />
			</fileset>
		</javadoc>
	</target>

	<!--Creates the deployable jar file  -->
	<target name="jar" depends="compile, junit">
		<jar destfile="${dist.dir}\M3uBuilder.jar" basedir="${build.dir}">
			<manifest>
				<attribute name="Main-Class" value="main.M3uBuilderMain" />
			</manifest>
		</jar>
	</target>

	<target name="main" depends="compile, jar, docs">
		<description>Main target</description>
	</target>
</project>